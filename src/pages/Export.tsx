import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { supabase } from "@/integrations/supabase/client";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { useToast } from "@/hooks/use-toast";
import { Activity, ArrowLeft, Download, FileText } from "lucide-react";

const Export = () => {
  const navigate = useNavigate();
  const { toast } = useToast();
  const [loading, setLoading] = useState(false);

  const handleExport = async () => {
    setLoading(true);
    try {
      const { data: { user } } = await supabase.auth.getUser();
      if (!user) throw new Error("Not authenticated");

      // Fetch all user health data
      const [logsResult, reportsResult, profileResult] = await Promise.all([
        supabase.from("health_logs").select("*").eq("user_id", user.id).order("log_date", { ascending: false }),
        supabase.from("medical_reports").select("*").eq("user_id", user.id).order("uploaded_at", { ascending: false }),
        supabase.from("profiles").select("*").eq("user_id", user.id).single(),
      ]);

      // Generate HTML report
      const html = `
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>VitalSync Health Report</title>
  <style>
    body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
    h1 { color: #2E8B57; }
    h2 { color: #1E293B; border-bottom: 2px solid #14B8A6; padding-bottom: 10px; }
    table { width: 100%; border-collapse: collapse; margin: 20px 0; }
    th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
    th { background-color: #2E8B57; color: white; }
    .header { text-align: center; margin-bottom: 30px; }
    .section { margin: 30px 0; }
  </style>
</head>
<body>
  <div class="header">
    <h1>VitalSync Health Report</h1>
    <p>Generated on ${new Date().toLocaleDateString()}</p>
    <p><strong>${profileResult.data?.full_name || user.email}</strong></p>
  </div>

  <div class="section">
    <h2>Patient Information</h2>
    <p><strong>Name:</strong> ${profileResult.data?.full_name || "N/A"}</p>
    <p><strong>Date of Birth:</strong> ${profileResult.data?.date_of_birth || "N/A"}</p>
    <p><strong>Blood Group:</strong> ${profileResult.data?.blood_group || "N/A"}</p>
    <p><strong>Allergies:</strong> ${profileResult.data?.allergies || "None reported"}</p>
  </div>

  <div class="section">
    <h2>Health Logs (${logsResult.data?.length || 0} entries)</h2>
    <table>
      <thead>
        <tr>
          <th>Date</th>
          <th>Symptoms</th>
          <th>Temp (°F)</th>
          <th>BP</th>
          <th>Heart Rate</th>
          <th>Blood Sugar</th>
        </tr>
      </thead>
      <tbody>
        ${
          logsResult.data
            ?.map(
              (log) => `
          <tr>
            <td>${new Date(log.log_date).toLocaleDateString()}</td>
            <td>${log.symptoms?.join(", ") || "None"}</td>
            <td>${log.temperature || "-"}</td>
            <td>${log.blood_pressure_systolic && log.blood_pressure_diastolic ? `${log.blood_pressure_systolic}/${log.blood_pressure_diastolic}` : "-"}</td>
            <td>${log.heart_rate || "-"}</td>
            <td>${log.blood_sugar || "-"}</td>
          </tr>
        `
            )
            .join("") || '<tr><td colspan="6">No health logs available</td></tr>'
        }
      </tbody>
    </table>
  </div>

  <div class="section">
    <h2>Medical Reports (${reportsResult.data?.length || 0} documents)</h2>
    <table>
      <thead>
        <tr>
          <th>Title</th>
          <th>Category</th>
          <th>Upload Date</th>
        </tr>
      </thead>
      <tbody>
        ${
          reportsResult.data
            ?.map(
              (report) => `
          <tr>
            <td>${report.title}</td>
            <td>${report.category}</td>
            <td>${new Date(report.uploaded_at).toLocaleDateString()}</td>
          </tr>
        `
            )
            .join("") || '<tr><td colspan="3">No medical reports available</td></tr>'
        }
      </tbody>
    </table>
  </div>

  <div class="section">
    <p><em>This report was generated by VitalSync. For medical advice, please consult your healthcare provider.</em></p>
  </div>
</body>
</html>
      `;

      // Create downloadable file
      const blob = new Blob([html], { type: "text/html" });
      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = `vitalsync-health-report-${new Date().toISOString().split("T")[0]}.html`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);

      toast({ title: "Health report downloaded successfully!" });
    } catch (error: any) {
      toast({
        variant: "destructive",
        title: "Export failed",
        description: error.message,
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <header className="border-b bg-card shadow-sm">
        <div className="container mx-auto px-4 py-4 flex items-center gap-3">
          <Button variant="ghost" size="sm" onClick={() => navigate("/dashboard")}>
            <ArrowLeft className="w-4 h-4" />
          </Button>
          <div className="flex items-center gap-3">
            <div className="w-10 h-10 rounded-lg bg-gradient-primary flex items-center justify-center">
              <FileText className="w-6 h-6 text-primary-foreground" />
            </div>
            <h1 className="text-2xl font-bold">Export Health Summary</h1>
          </div>
        </div>
      </header>

      <main className="container mx-auto px-4 py-8 max-w-2xl">
        <Card className="shadow-card">
          <CardHeader>
            <CardTitle>Download Your Complete Health Report</CardTitle>
            <CardDescription>
              Generate a comprehensive HTML report containing all your health logs and medical documents
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="bg-muted rounded-lg p-6 space-y-4">
              <h3 className="font-semibold flex items-center gap-2">
                <FileText className="w-5 h-5 text-primary" />
                What's included:
              </h3>
              <ul className="space-y-2 text-sm text-muted-foreground ml-7">
                <li>• Patient information and profile details</li>
                <li>• Complete health log history with vitals</li>
                <li>• List of all uploaded medical reports</li>
                <li>• Formatted for easy sharing with doctors</li>
              </ul>
            </div>

            <Button onClick={handleExport} disabled={loading} className="w-full" size="lg">
              {loading ? (
                "Generating report..."
              ) : (
                <>
                  <Download className="w-5 h-5 mr-2" />
                  Download Health Report (HTML)
                </>
              )}
            </Button>

            <p className="text-xs text-center text-muted-foreground">
              The report will be downloaded as an HTML file that you can open in any browser or print as PDF
            </p>
          </CardContent>
        </Card>
      </main>
    </div>
  );
};

export default Export;
